---
import IconArrowRight from '../../../Icons/IconArrowRight.astro'
import IconGoToPage from '../../../Icons/IconGoToPage.astro'
import Link from '../../ui/Link.astro'


interface Props {
  className?: string
  initialDate: string
  endDate: string
  company: string
  position: string
  description: string
  url: string
  slug: string
}

const { className = "", initialDate, endDate, company, position, description, url, slug } = Astro.props;

function formatDate(date: string){
  const fecha = new Date(`${date}T00:00:00`)
  const options: Intl.DateTimeFormatOptions = {
    day: '2-digit', // '2-digit' o 'numeric'
    month: 'short', // 'long', 'short', 'narrow', 'numeric' o '2-digit'
    year: 'numeric'  // 'numeric' o '2-digit'
};  
  const formatedDate = fecha.toLocaleDateString('es-BO', options).toLocaleUpperCase().replaceAll(' ', '-')
  return formatedDate
}


---

<article class="cardExperience flex flex-col gap-2 pb-4 border-b border-[var(--color-gray)]">
  <header class="text-step0">
    <time class="text-[var(--color-section)] text-_step2" datetime={initialDate}>{ formatDate(initialDate) }</time>
    <span class="text-_step2">al</span>
    <time class="text-[var(--color-section)] text-_step2" datetime={endDate}>{ formatDate(endDate) }</time>
    <h2 
      transition:name="title-experience"
      class="font-semibold">
      { company } -
      <span class="font-normal text-[var(--color-section)]">{ position }</span>
    </h2>
  </header>
  <p 
    transition:name="description-experience"
    class="text-pretty text-_step1"
  >
    { description }
  </p>
  <footer class="flex flex-row gap-2 flex-wrap">
    <Link href={url} className='hover:text-[var(--color-section)] text-_step1'>
      Sitio <IconGoToPage size='24' />
    </Link>
    <Link href={`/${slug}`} target='_self' className='hover:text-[var(--color-html)] text-_step1'>
      Ver detalles <IconArrowRight />
    </Link>
  </footer>
</article>

<style>

  @keyframes entry {
    from {
      opacity: 0;      
    }
    to {
      opacity: 1;
    }
  }

  .cardExperience {
    animation: entry linear both;
    animation-timeline: view();
    animation-range: entry 10% cover 20%;
  }


</style>